#pragma checksum "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c35fe75bf33ef9b631769211c82c0401b89a876"
// <auto-generated/>
#pragma warning disable 1591
namespace Radzen.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "E:\Dev\radzen-blazor\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 2 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
using System.Linq.Dynamic.Core;

#line default
#line hidden
    public partial class RadzenDataGridGroupRow<TItem> : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
#line 3 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
  
    var rowArgs = Grid?.GroupRowAttributes(this);

#line default
#line hidden
            __builder.OpenElement(0, "tr");
            __builder.AddMultipleAttributes(1, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, object>>>(
#line 6 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                  rowArgs.Item2

#line default
#line hidden
            ));
            __builder.AddMarkupContent(2, "\r\n");
#line 7 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
     if (Group.GroupDescriptor != null)
    {
        

#line default
#line hidden
#line 9 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
         for (var i = 0; i < GetLevel(); i++)
        {

#line default
#line hidden
            __builder.AddContent(3, "            ");
            __builder.AddMarkupContent(4, "<td class=\"rz-col-icon\">\r\n                <span class=\"rz-column-title\"></span>\r\n            </td>\r\n");
#line 14 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
        }

#line default
#line hidden
#line 14 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
         

    }

#line default
#line hidden
            __builder.AddContent(5, "    ");
            __builder.OpenElement(6, "td");
            __builder.AddAttribute(7, "class", "rz-col-icon");
            __builder.AddMarkupContent(8, "\r\n        <span class=\"rz-column-title\"></span>\r\n        ");
            __builder.OpenElement(9, "a");
            __builder.AddAttribute(10, "href", "javascript:void(0)");
            __builder.AddAttribute(11, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 19 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                                                 _ => Grid.ExpandGroupItem(this, rowArgs.Item1.Expanded)

#line default
#line hidden
            ));
            __builder.AddMarkupContent(12, "\r\n            ");
            __builder.OpenElement(13, "span");
            __builder.AddAttribute(14, "class", 
#line 20 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                           Grid.ExpandedGroupItemStyle(this, rowArgs.Item1.Expanded)

#line default
#line hidden
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(15, "\r\n        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(16, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(17, "\r\n    ");
            __builder.OpenElement(18, "td");
            __builder.AddAttribute(19, "colspan", 
#line 23 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                   Columns.Count + Grid.Groups.Count - 1 - Group.Level + (Grid.Template != null && Grid.ShowExpandColumn ? 1 : 0)

#line default
#line hidden
            );
            __builder.AddMarkupContent(20, "\r\n        ");
            __builder.OpenElement(21, "span");
            __builder.AddAttribute(22, "class", "rz-cell-data");
            __builder.AddMarkupContent(23, "\r\n");
#line 25 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
             if (Grid.GroupHeaderTemplate != null)
            {
                

#line default
#line hidden
#line 27 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
__builder.AddContent(24, Grid.GroupHeaderTemplate(Group));

#line default
#line hidden
#line 27 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                                                
            }
            else if(Group.GroupDescriptor != null)
            {
                

#line default
#line hidden
#line 31 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
__builder.AddContent(25, Group.GroupDescriptor.GetTitle() + ": " + (Group.Data.Key ?? ""));

#line default
#line hidden
#line 31 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                                                                                   
            }

#line default
#line hidden
            __builder.AddContent(26, "        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(27, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(28, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(29, "\r\n");
#line 36 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
 if(Grid != null)
{
    if (Grid.IsGroupItemExpanded(this) && rowArgs.Item1.Expanded != false)
    {
        

#line default
#line hidden
#line 40 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
__builder.AddContent(30, DrawDataRows());

#line default
#line hidden
#line 40 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                       
    }
    else if(Grid.GroupFootersAlwaysVisible)
    {
        if (!Grid.collapsedGroupItems.Keys.Contains(this))
        {
            Grid.collapsedGroupItems.Add(this, true);
        }

        

#line default
#line hidden
#line 49 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
__builder.AddContent(31, DrawDataRows(true));

#line default
#line hidden
#line 49 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
                           
    }
    else
    {
        if (!Grid.collapsedGroupItems.Keys.Contains(this))
        {
            Grid.collapsedGroupItems.Add(this, true);
        }
    }
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 59 "E:\Dev\radzen-blazor\Radzen.Blazor\RadzenDataGridGroupRow.razor"
       
        [Parameter]
        public IList<RadzenDataGridColumn<TItem>> Columns { get; set; }

        GroupResult _groupResult;
        [Parameter]
        public GroupResult GroupResult 
        { 
            get
            {
                return _groupResult;
            }
            set
            {
                if(_groupResult != value)
                {
                    _groupResult = value;

                    var level = GetLevel();
                    Group = new Group()
                    {
                        Level = level,
                        GroupDescriptor = Grid.Groups?.ElementAtOrDefault(level),
                        Data = _groupResult
                    };
                }
            }
        }

        [Parameter]
        public RadzenDataGrid<TItem> Grid { get; set; }

        [Parameter]
        public RadzenDataGridGroupRow<TItem> Parent { get; set; }

        [Parameter]
        public Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder Builder { get; set; }

        RenderFragment DrawDataRows(bool groupFootersOnly = false)
        {
            return new RenderFragment(builder =>
            {
                if(GroupResult.Subgroups != null)
                {
                    foreach(var g in GroupResult.Subgroups)
                    {
                        builder.OpenComponent(0, typeof(RadzenDataGridGroupRow<TItem>));
                        builder.AddAttribute(1, "Columns", Columns);
                        builder.AddAttribute(3, "Grid", Grid);
                        builder.AddAttribute(3, "Parent", this);
                        builder.AddAttribute(5, "GroupResult", g);
                        builder.AddAttribute(6, "Builder", builder);
                        builder.CloseComponent();
                    }
                }
                else
                {
                    if(!groupFootersOnly)
                    {
                        int i = 0;
                        foreach(var item in GroupResult.Items)
                        {
                            builder.OpenComponent(0, typeof(RadzenDataGridRow<TItem>));
                            builder.AddAttribute(1, "Columns", Columns);
                            builder.AddAttribute(2, "Index", i);
                            builder.AddAttribute(3, "Grid", Grid);
                            builder.AddAttribute(4, "TItem", typeof(TItem));
                            builder.AddAttribute(5, "Item", item);
                            builder.AddAttribute(6, "InEditMode", Grid.IsRowInEditMode((TItem)item));

                            if (Grid.editContexts.ContainsKey((TItem)item))
                            {
                                builder.AddAttribute(7, nameof(RadzenDataGridRow<TItem>.EditContext), Grid.editContexts[(TItem)item]);
                            }

                            builder.CloseComponent();
                            i++;
                        }
                    }

                    if (Columns.Where(c => c.GroupFooterTemplate != null).Any())
                    {
                        builder.OpenComponent(7, typeof(RadzenDataGridGroupFooterRow<TItem>));
                        builder.AddAttribute(8, "Columns", Columns);
                        builder.AddAttribute(9, "Grid", Grid);
                        builder.AddAttribute(10, "GroupResult", GroupResult);
                        builder.AddAttribute(11, "Builder", builder);
                        builder.AddAttribute(12, "Parent", this);
                        builder.CloseComponent();
                    }
                }
            });
        }

        public Group Group { get; set; }

        int GetLevel()
        {
            int i = 0;
            var p = Parent;
            while(p != null)
            {
                p = p.Parent;
                i++;
            }

            return i;
        }

#line default
#line hidden
    }
}
#pragma warning restore 1591
