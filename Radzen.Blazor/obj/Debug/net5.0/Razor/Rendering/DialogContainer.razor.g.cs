#pragma checksum "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1e4383d6b1198b447d6b0f877779dd473d338c8c"
// <auto-generated/>
#pragma warning disable 1591
namespace Radzen.Blazor.Rendering
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "E:\Dev\radzen-blazor\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 1 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 2 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
using System.Reflection;

#line default
#line hidden
    public partial class DialogContainer : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "rz-dialog-wrapper");
            __builder.AddMarkupContent(2, "\r\n    ");
            __builder.OpenElement(3, "div");
            __builder.AddAttribute(4, "class", "rz-dialog");
            __builder.AddAttribute(5, "role", "dialog");
            __builder.AddAttribute(6, "aria-labelledby", "rz-dialog-0-label");
            __builder.AddAttribute(7, "style", 
#line 6 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                                                                                  Style

#line default
#line hidden
            );
            __builder.AddElementReferenceCapture(8, (__value) => {
#line 6 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
               dialog = __value;

#line default
#line hidden
            }
            );
            __builder.AddMarkupContent(9, "\r\n");
#line 7 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
         if (Dialog.Options.ShowTitle)
        {
            

#line default
#line hidden
#line 9 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
             if (Dialog.Options.Draggable)
            {

#line default
#line hidden
            __builder.AddContent(10, "                ");
            __builder.OpenComponent<Radzen.Blazor.Rendering.Draggable>(11);
            __builder.AddAttribute(12, "Drag", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Radzen.Blazor.Rendering.DraggableEventArgs>(this, 
#line 11 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                  OnDrag

#line default
#line hidden
            )));
            __builder.AddAttribute(13, "DragStart", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Radzen.Blazor.Rendering.DraggableEventArgs>(this, 
#line 11 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                                      OnDragStart

#line default
#line hidden
            )));
            __builder.AddAttribute(14, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(15, "\r\n                    ");
                __builder2.OpenElement(16, "div");
                __builder2.AddAttribute(17, "class", "rz-dialog-titlebar");
                __builder2.AddMarkupContent(18, "\r\n                        ");
                __builder2.OpenElement(19, "div");
                __builder2.AddAttribute(20, "class", "rz-dialog-title");
                __builder2.AddAttribute(21, "style", "display: inline");
                __builder2.AddAttribute(22, "id", "rz-dialog-0-label");
#line 13 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
__builder2.AddContent(23, (MarkupString)Dialog.Title);

#line default
#line hidden
                __builder2.CloseElement();
                __builder2.AddMarkupContent(24, "\r\n");
#line 14 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                         if (Dialog.Options.ShowClose)
                        {

#line default
#line hidden
                __builder2.AddContent(25, "                            ");
                __builder2.OpenElement(26, "a");
                __builder2.AddAttribute(27, "href", "javascript:void(0)");
                __builder2.AddAttribute(28, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 16 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                                                   Close

#line default
#line hidden
                ));
                __builder2.AddAttribute(29, "role", "button");
                __builder2.AddAttribute(30, "class", "rz-dialog-titlebar-icon rz-dialog-titlebar-close");
                __builder2.AddMarkupContent(31, "\r\n                                <span class=\"rzi rzi-times\"></span>\r\n                            ");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(32, "\r\n");
#line 19 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                        }

#line default
#line hidden
                __builder2.AddContent(33, "                    ");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(34, "\r\n                ");
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(35, "\r\n");
#line 22 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
            }
            else
            {

#line default
#line hidden
            __builder.AddContent(36, "                ");
            __builder.OpenElement(37, "div");
            __builder.AddAttribute(38, "class", "rz-dialog-titlebar");
            __builder.AddMarkupContent(39, "\r\n                    ");
            __builder.OpenElement(40, "div");
            __builder.AddAttribute(41, "class", "rz-dialog-title");
            __builder.AddAttribute(42, "style", "display: inline");
            __builder.AddAttribute(43, "id", "rz-dialog-0-label");
#line 26 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
__builder.AddContent(44, (MarkupString)Dialog.Title);

#line default
#line hidden
            __builder.CloseElement();
            __builder.AddMarkupContent(45, "\r\n");
#line 27 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                     if (Dialog.Options.ShowClose)
                    {

#line default
#line hidden
            __builder.AddContent(46, "                        ");
            __builder.OpenElement(47, "a");
            __builder.AddAttribute(48, "href", "javascript:void(0)");
            __builder.AddAttribute(49, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 29 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                                               Close

#line default
#line hidden
            ));
            __builder.AddAttribute(50, "role", "button");
            __builder.AddAttribute(51, "class", "rz-dialog-titlebar-icon rz-dialog-titlebar-close");
            __builder.AddMarkupContent(52, "\r\n                            <span class=\"rzi rzi-times\"></span>\r\n                        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(53, "\r\n");
#line 32 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                    }

#line default
#line hidden
            __builder.AddContent(54, "                ");
            __builder.CloseElement();
            __builder.AddMarkupContent(55, "\r\n");
#line 34 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
            }

#line default
#line hidden
#line 34 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
             
        }

#line default
#line hidden
            __builder.AddContent(56, "        ");
            __builder.OpenElement(57, "div");
            __builder.AddAttribute(58, "class", "rz-dialog-content");
            __builder.AddMarkupContent(59, "\r\n");
#line 37 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
             if (Dialog.Options.ChildContent != null)
            {
                

#line default
#line hidden
#line 39 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
__builder.AddContent(60, Dialog.Options.ChildContent(Service));

#line default
#line hidden
#line 39 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                                                     
            }
            else
            {
                

#line default
#line hidden
#line 43 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
__builder.AddContent(61, ChildContent);

#line default
#line hidden
#line 43 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                             
            }

#line default
#line hidden
            __builder.AddContent(62, "        ");
            __builder.CloseElement();
            __builder.AddMarkupContent(63, "\r\n    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(64, "\r\n\r\n");
#line 48 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
     if (ShowMask)
    {
        

#line default
#line hidden
#line 50 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
         if (Dialog.Options.CloseDialogOnOverlayClick)
        {

#line default
#line hidden
            __builder.AddContent(65, "            ");
            __builder.OpenElement(66, "div");
            __builder.AddAttribute(67, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 52 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
                            Close

#line default
#line hidden
            ));
            __builder.AddAttribute(68, "class", "rz-dialog-mask");
            __builder.AddAttribute(69, "style", "z-index: 1000;");
            __builder.CloseElement();
            __builder.AddMarkupContent(70, "\r\n");
#line 53 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
        }
        else
        {

#line default
#line hidden
            __builder.AddMarkupContent(71, "            <div class=\"rz-dialog-mask\" style=\"z-index: 1000;\"></div>\r\n");
#line 57 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
        }

#line default
#line hidden
#line 57 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
         
    }

#line default
#line hidden
            __builder.AddMarkupContent(72, "\r\n");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#line 62 "E:\Dev\radzen-blazor\Radzen.Blazor\Rendering\DialogContainer.razor"
       
    ElementReference dialog;

    string left;
    string top;
    string height;
    string width;

    double clientX;
    double clientY;

    async Task OnDragStart(DraggableEventArgs args)
    {
        clientX = args.ClientX;
        clientY = args.ClientY;

        shouldRender = false;
        var rect = await JSRuntime.InvokeAsync<Rect>("Radzen.clientRect", dialog);
        height = $"height: {rect.Height}px;";
        width = $"width: {rect.Width}px;";

        shouldRender = true;
    }

    void OnDrag(DraggableEventArgs args)
    {
        left = $"left: {args.Rect.Left + (args.ClientX - clientX)}px;";
        top = $"top: {args.Rect.Top + (args.ClientY - clientY)}px;";
    }

    bool shouldRender = true;
    protected override bool ShouldRender()
    {
        return shouldRender;
    }

    [Parameter]
    public Dialog Dialog { get; set; }

    [Parameter]
    public bool ShowMask { get; set; } = true;

    RenderFragment ChildContent => new RenderFragment(builder =>
        {
            builder.OpenComponent(0, Dialog.Type);

            if (Dialog.Parameters != null)
            {
                foreach (var parameter in Dialog.Parameters)
                {
                    builder.AddAttribute(1, parameter.Key, parameter.Value);
                }
            }

            builder.AddComponentReferenceCapture(2, component => reference = component);

            builder.CloseComponent();
        });

    object reference;

    void Close()
    {
        Service.Close();
    }

    string Style
    {
        get
        {
            var baseStyle = "min-width: 150px; min-height: 150px; z-index: 1001; opacity: 1;position:absolute;";
            var widthStyle = !string.IsNullOrEmpty(width) ? width : string.IsNullOrEmpty(Dialog.Options.Width) ? "" : $"width: {Dialog.Options.Width};";
            var heightStyle = !string.IsNullOrEmpty(height) ? height : string.IsNullOrEmpty(Dialog.Options.Height) ? "" : $"height: {Dialog.Options.Height};";
            var topStyle = !string.IsNullOrEmpty(top) ? top : string.IsNullOrEmpty(Dialog.Options.Top) ? "" : $"top: {Dialog.Options.Top};";
            var leftStyle = !string.IsNullOrEmpty(left) ? left :string.IsNullOrEmpty(Dialog.Options.Left) ? "" : $"left: {Dialog.Options.Left};";
            var bottomStyle = string.IsNullOrEmpty(Dialog.Options.Bottom) ? "" : $"bottom: {Dialog.Options.Bottom};";
            var resizeStyle = Dialog.Options.Resizable ? "resize:both;" : "";

            return $"{baseStyle}{widthStyle}{heightStyle}{topStyle}{leftStyle}{bottomStyle}{resizeStyle}{Dialog.Options.Style}";
        }
    }

    [Inject] 
    DialogService Service { get; set; }

    protected override void OnInitialized()
    {
        Service.OnRefresh += OnRefresh;
    }

    void OnRefresh()
    {
        var stateHasChanged = reference?.GetType().GetMethod("StateHasChanged", BindingFlags.NonPublic | BindingFlags.Instance);

        InvokeAsync(() => 
        {
            StateHasChanged();
            stateHasChanged?.Invoke(reference, null);
        })
        .ConfigureAwait(false);
    }

    public void Dispose()
    {
        Service.OnRefresh -= OnRefresh;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
